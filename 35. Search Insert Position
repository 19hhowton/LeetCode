# LINK: https://leetcode.com/problems/search-insert-position/

class Solution(object):
    def searchInsert(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        
        What did I learn? 
        How do I set up code when I want to check again? Iteration bb :) 
        
        """
        # binary tree
        stillChecking = True 
        # idx is middle number. If no middle, upper middle number
        idx = int((len(nums)//2))

        while stillChecking:
            # Doesn't exist
            if idx == len(nums)-1:
                return len(nums)
                
            if idx == 1:
                return 0
                
            # =
            if nums[idx] == target:
                return idx
                
            # > then LowMidPoint 
            if nums[idx] > target:
                idx = int(len(nums[:idx])//2)
                
            # < then HighMidPoint 
            if nums[idx] < target:
                idx = int(len(nums[idx:])//2) + idx
